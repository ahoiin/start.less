//
// LISTS
// --------------------------------------------------
ul.bullets { 
  li { border: 0px; padding: 5px 10px; }
  li:before { 
    display: inline-block;
    margin-right: 7px;
    background-color: @listBulletColor;
    height: @baseFontSize - 6;
    width: @baseFontSize - 6;
    vertical-align: middle;
    .borderRadius(2*@baseFontSize);
  } 
} 
ul.bullets ul { margin: 5px 0px -5px -10px; border: 0px; li {padding-left: 25px;} }
ul.bullets ul ul { margin: 0px; border: 0px; li {padding-left: 45px;} }
// ZEBRA-STRIPING for lists
ul.striped li:nth-child(odd), ol.striped li:nth-child(odd) { background-color: @listBackgroundAccent; } 
ul.striped li, ol.striped { &:hover { 
  cursor: pointer; background-color: @listColorBackgroundHover !important; color: @listColorHover; 
    h1, h2, h3, h4, h5, h6 { color: @listColorHover; } 
} }

//
// TABLES
// --------------------------------------------------
table.striped tbody tr:nth-child(odd) { td, th { background-color: @tableBackgroundAccent; } }



//
// FORMS
// --------------------------------------------------
// Input
// --------------------------------------------------
// Append/Prepend around input fields
.append, .prepend {
    display: inline-block;
    width: auto;
    padding: 5px 5px;
    font-family: inherit;
    font-size: @baseFontSize;
    font-weight: normal;
    line-height: @baseLineHeight;
    *line-height: @baseLineHeight;
    text-align: center;
    border: 1px solid @inputBorder;
    color: @inputColor; 
} 
.append  { margin-left: -5px; vertical-align: top; margin-top: 0px; border-left: 0px; } 
.prepend  { margin-right: -4px; vertical-align: top; margin-top: 0px; border-right: 0px;
  &:not(button) { padding-right: 1px; } 
  + input, + input:hover, + input:focus { border-left: 0px; padding-left: 4px; }   
} 


// Buttons
// --------------------------------------------------
button, input[type="button"], input[type="reset"], input[type="submit"] { 
    &.append { border: 1px solid @btnBorder; }
    &.append, &.prepend { padding: 5px 10px; color: @btnColor; }
}

// Upload Button
.upload { position: relative; overflow: hidden; } 
.upload input[type="file"] { .opacity(0); position: absolute; top: 0; left: 0; height: 100%; width: auto; } 


// MISC
// --------------------------------------------------
// Help Text under Input Field
.help { display: block; color: @grayLight; margin: 2px 1px 10px; }



//
// GRID
// --------------------------------------------------
// Create grid for everything and input, select, textarea                                                                                                 
#grid > .fluid(@fluidGridColumnWidth, @fluidGridGutterWidth);
               
// Create the grid
#grid {
  .fluid (@fluidGridColumnWidth, @fluidGridGutterWidth) {
    .spanX (@index) when (@index > 0) {
      (~".s-@{index}, input.s-@{index}, textarea.s-@{index}, select.s-@{index}") { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}
    .span (@columns) {
      width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
    }

    .grid {
      width: 100%;
      .clearfix();
      [class*="s-"] {
        display: block;
        float: left;
        margin-left: @fluidGridGutterWidth;
        &:first-child { margin-left: 0; }
      }
    } 
    input, textarea, { margin-left: 0; }
    .spanX (@gridColumns); // generate .spanX and .offsetX 
  }
}


//
// NAVBAR
// --------------------------------------------------
nav {
  a { 
    &.activeState { color: @navLinkColorActive; } 
    &.loading { width: auto; height: auto;
      .animation(none); border: 0 !important; color: @grayLightest;
  	}
  }

  &.top, &.bottom {
      position: fixed;
      right: 0;
      left: 0;
      z-index: 1;
    }
  &.top { top: 0; }
  &.bottom { bottom: 0; } 
    
  .brand {
      float: left;
      display: block;
      color: white;
      padding: 10px 20px 10px 0px;
      font-size: @navBrandFontSize;
  } 
    
  .collapse {
    display: none;
    float: right;
    background-color: transparent;
    padding: 10px;  
    span {
      display: block;
      width: 18px;
      height: 3px;
      margin: 3px 0px; 
      background-color: @whiteSmoke;
    }
  }
  #collapse:target {
    clear: both;
    display: block;
        a { display: block; }
    } 
}




// Functions and mixins
// --------------------------------------------------
.createFontFace (@fontName: '', @fontPath: '') { 
    font-family: @fontName;
    font-weight: normal;
  	font-style: normal; 
    src: url('@{fontPath}@{fontName}.eot'); /* IE9 Compat Modes */
    src: url('@{fontPath}@{fontName}.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
         url('@{fontPath}@{fontName}.woff') format('woff'), /* Safari, Android, iOS */
         url('@{fontPath}@{fontName}.ttf')  format('truetype'); /* Safari, Android, iOS */
}   

/* Shorthand classes */
.hidden { display: none; visibility: hidden; }
.show { display: block; }
 
.center { margin: 0px auto; } 
.floatRight { float: right; }
.floatLeft  { float: left; }
select, textarea, input, button, div, span {
  &.block { display: block; }
  &.inline { display: inline-block; }
}
// For clearing floats like a boss h5bp.com/q
.clearfix {
  *zoom: 1; /* IE6/7 support */
  &:before, &:after { display: table; content: ""; line-height: 0; }
  &:after { clear: both; }
}

// Paragraph Settings
p.left { text-align: left; float: none; }
p.right { text-align: right; float: none; }
p.center { text-align: center; margin: 0px 0px @baseLineHeight / 2; }
p.abstract { font-size: @baseFontSize + 8px; font-weight: 200; line-height: @baseLineHeight + 10px; }
mark { background-color: yellow; color: black; }
i, cite, em, var, address, dfn { font-style: italic; }


// Placeholder text
.placeholder(@color: @placeholderText) {
  &:-moz-placeholder { color: @color; }
  &:-ms-input-placeholder { color: @color; }
  &::-webkit-input-placeholder { color: @color; }
} 

//::selection { background-color: lighten(@brandColor,10%); }
//::-moz-selection { background-color:lighten(@brandColor,10%); }

// Text overflow
// Requires inline-block or block for proper styling
.break {
    -ms-word-break: break-all;
    word-break: break-all;
    word-break: break-word;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    hyphens: auto;
}
 
.ellipsis {
    width: 250px;
    white-space: nowrap;
    overflow: hidden;
    -ms-text-overflow: ellipsis; /* Required for IE8 */
    -o-text-overflow: ellipsis; /* Required for Opera */
    text-overflow: ellipsis;
}

// Multicolumn
.multiColumn { .multicolumn(3, 30px) };
.multicolumn(@count: 3, @gap: 10px) {  
    -webkit-column-count: @count;  
    -webkit-column-gap: @gap;  
    -moz-column-count: @count;  
    -moz-column-gap: @gap;  
    column-count: @count;  
    column-gap: @gap;  
}

// Border Radius
.borderRadius(@radius: 1px) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}
.lightRounded { .borderRadius(2px); }
.heavyRounded { .borderRadius(8px); }
.fullRounded { .borderRadius(50%); }

.drop-shadow    { background: #9479fa; }
.drop-shadow.top  { .boxShadow(0 -4px 2px -2px rgba(0,0,0,0.2)); }
.drop-shadow.right  { .boxShadow(4px 0 2px -2px rgba(0,0,0,0.2)); }
.drop-shadow.bottom { .boxShadow(0 4px 2px -2px rgba(0,0,0,0.2)); }
.drop-shadow.left   { .boxShadow(-4px 0 2px -2px rgba(0,0,0,0.2)); }
.embossed {
    /*text-shadow: 0 1px 1px rgba(255,255,255,0.9);*/
    border: 1px solid rgba(0,0,0,0.05);
    .boxShadow(inset 0 1px 0 rgba(255,255,255,0.7));
}


.boxShadow (@string) {
  -webkit-box-shadow: @string;
  -moz-box-shadow:    @string;
  box-shadow:         @string;
}


.placement(@type, @top, @right, @bottom, @left) {
    position: @type;
    top: @top;
    right: @right;
    bottom: @bottom;
    left: @left;
}

// CSS3 Transitions
.transition(@transition: all 0.3s ease-out) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
      -ms-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}

.rotate (@degrees: 90deg) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}

.translate(@x, @y) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}

// Clipping
.clip(@top, @right, @bottom, @left) {
    position: absolute;
    clip: rect(@top, @right, @bottom, @left); /* IE4 to IE7 */
    clip: rect(@top, @right, @bottom, @left); /* IE8+ & other browsers */
}

.user-select(@select) {
  -webkit-user-select: @select;
     -moz-user-select: @select;
      -ms-user-select: @select;
       -o-user-select: @select;
          user-select: @select;
}

.opacity(@opacity: 50) {
    opacity: @opacity / 100;
    -moz-opacity: @opacity / 100;
    filter: ~"alpha(opacity=@{opacity})";
}    
      
/* CSS3 Animation */  
/* @name @duration @iteration @timing */
.animation(@val: spin .6s infinite linear) {
    animation:@val;
    -moz-animation:@val;
    -webkit-animation:@val;
    -o-animation:@val;
}
.keyframeAnimation(spin, transform:rotate(0deg), transform:rotate(360deg) );

.keyframeAnimationRotate (@name, @from, @to) { 
  @-webkit-keyframes @{name} { 0% { -webkit-transform:rotate(@from); } 100% { -webkit-transform:rotate(@to); } }
  @-moz-keyframes @{name} { 0% { -moz-transform:rotate(@from); } 100% { -moz-transform:rotate(@to); } }
  @-ms-keyframes @{name} { 0% { -ms-transform:rotate(@from); } 100% { -ms-transform:rotate(@to); } }
  @-o-keyframes @{name} { 0% { -o-transform:rotate(@from); } 100% { -o-transform:rotate(@to); } }
    @keyframes @{name} { 0% { transform:rotate(@from); } 100% { transform:rotate(@to); } }  
}


/* Animations */
.loading {
  pointer-events: none; opacity: 0.5;
}

.loader {
  content: " ";
    border-color:  @brandColor;
    background-color: rgba(0,0,0,0);
    border-width: 3px;
    border-style: solid; 
    border-top:3px solid rgba(0,0,0,0) !important;
    border-left:3px solid rgba(0,0,0,0) !important;
    border-radius:20px;
    width: 20px;
    height: 20px;
    .animation(spin .6s infinite linear);
    display: inline-block;
}
// Spining, for e.g. loading icon
.keyframeAnimationRotate(spin, 0deg, 360deg );

// CSS3 Transitions
.fade {
   opacity: 1;
   .transition(opacity .25s ease-in-out);
}
.fade-in { 
  opacity: 0.5;
}